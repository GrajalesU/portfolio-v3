---
import Email from "./icons/Email.astro";
import GitHub from "./icons/GitHub.astro";
import LinkedIn from "./icons/LinkedIn.astro";

import { useTranslations, getLangFromUrl } from "../i18n/utils";
const lang = getLangFromUrl(new URL(Astro.url));
const t = useTranslations(lang);
---

<section
  class="p-4 mb-8 md:mb-0 md:py-8 min-h-svh content-center w-full relative"
  id="contact"
>
  <div
    class="absolute inset-0 z-0"
    style={{
      backgroundImage: `
    linear-gradient(to right, #e5e7eb 1px, transparent 1px),
    linear-gradient(to bottom, #e5e7eb 1px, transparent 1px)
  `,
      backgroundSize: "60px 60px",
      WebkitMaskImage:
        "radial-gradient(ellipse 70% 60% at 50% 100%, #000 60%, transparent 100%)",
      maskImage:
        "radial-gradient(ellipse 70% 60% at 50% 100%, #000 60%, transparent 100%)",
    }}
  >
  </div>
  <div class="container mx-auto max-w-6xl z-20 relative">
    <h2
      class="text-3xl font-bold mb-4 md:mb-8 tracking-tighter sm:text-5xl xl:text-6xl/none"
    >
      {t("contact.title")}
    </h2>
    <div class="flex flex-col md:flex-row md:gap-16 md:items-start">
      <div class="flex-1">
        <p class="mb-8 text-stone-600 px-2 md:px-0 md:text-xl max-w-2xl">
          {t("contact.description")}
        </p>
        <div class="flex flex-col gap-2 md:gap-4">
          <a
            href="mailto:juan.grajalesu@gmail.com"
            class="group px-4 py-2 md:px-6 md:py-3 border border-stone-300 rounded-md hover:bg-stone-50 transition-colors w-fit flex items-center gap-2 md:text-lg"
          >
            <span class="group-hover:scale-110 transition-transform">
              <Email />
            </span>
            juan.grajalesu@gmail.com
          </a>
          <div class="flex items-center gap-2 md:gap-4">
            <a
              href="https://github.com/grajalesu"
              target="_blank"
              rel="noopener noreferrer"
              class="group p-2 md:p-3 border border-stone-300 rounded-md hover:bg-stone-50 transition-colors"
            >
              <span class="group-hover:scale-110 transition-transform block">
                <GitHub />
              </span>
            </a>
            <a
              href="https://www.linkedin.com/in/juan-manuel-grajales-urquijo/"
              target="_blank"
              rel="noopener noreferrer"
              class="group p-2 md:p-3 border border-stone-300 rounded-md hover:bg-stone-50 transition-colors"
            >
              <span class="group-hover:scale-110 transition-transform block">
                <LinkedIn />
              </span>
            </a>
          </div>
        </div>
      </div>
      <div class="flex-1 mt-12 md:mt-0">
        <form action="post" class="flex flex-col gap-6">
          <div class="flex flex-col gap-6">
            <label for="name" class="flex flex-col gap-2">
              <span class="text-stone-600 md:text-lg"
                >{t("contact.form.name.label")}</span
              >
              <input
                type="text"
                id="name"
                name="name"
                placeholder={t("contact.form.name.placeholder")}
                required
                class="w-full px-4 py-2 md:px-6 md:py-3 border border-stone-300 rounded-md focus:outline-none focus:ring-2 focus:ring-stone-400 hover:border-stone-400 transition-colors"
              />
            </label>
            <label for="email" class="flex flex-col gap-2">
              <span class="text-stone-600 md:text-lg"
                >{t("contact.form.email.label")}</span
              >
              <input
                type="email"
                id="email"
                name="email"
                placeholder={t("contact.form.email.placeholder")}
                required
                class="w-full px-4 py-2 md:px-6 md:py-3 border border-stone-300 rounded-md focus:outline-none focus:ring-2 focus:ring-stone-400 hover:border-stone-400 transition-colors"
              />
            </label>
            <label for="message" class="flex flex-col gap-2">
              <span class="text-stone-600 md:text-lg"
                >{t("contact.form.message.label")}</span
              >
              <textarea
                id="message"
                name="message"
                placeholder={t("contact.form.message.placeholder")}
                required
                rows="4"
                class="w-full px-4 py-2 md:px-6 md:py-3 border border-stone-300 rounded-md focus:outline-none focus:ring-2 focus:ring-stone-400 hover:border-stone-400 transition-colors resize-none"
              ></textarea>
            </label>
          </div>
          <button
            type="submit"
            class="w-full bg-stone-500 text-white rounded-md px-4 py-2 md:px-6 md:py-3 hover:bg-stone-50 hover:text-stone-500 font-bold transition-colors disabled:opacity-50"
          >
            {t("contact.form.submit")}
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  import Toastify from "toastify-js";
  import emailjs from "@emailjs/browser";
  import "toastify-js/src/toastify.css";
  import { useTranslations, getLangFromUrl } from "../i18n/utils";
  const t = useTranslations(getLangFromUrl(new URL(window.location.href)));
  const button = document.querySelector("button");
  const form = document.querySelector("form") as HTMLFormElement;

  const showToast = (message: string, isError = false) => {
    Toastify({
      text: message,
      duration: 3000,
      close: true,
      gravity: "bottom",
      position: "left",
      stopOnFocus: true,
      style: {
        background: "white",
        color: "#0f172a",
        border: `1px solid ${isError ? "#dc2626" : "#16a34a"}`,
        borderRadius: "0.5rem",
        padding: "0.5rem 1rem",
        boxShadow: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
        fontSize: "0.875rem",
        fontWeight: "500",
      },
    }).showToast();
  };

  const handleSubmit = (e: Event) => {
    e.preventDefault();
    if (!form || !button) return;

    const formData = new FormData(form);
    const name = formData.get("name") as string;
    const email = formData.get("email") as string;
    const message = formData.get("message") as string;

    if (!name || !email || !message) {
      showToast(t("contact.error"), true);
      return;
    }

    button.disabled = true;

    emailjs
      .sendForm("service_yrqlvew", "template_z9cggzt", form)
      .then(() => {
        showToast(t("contact.success"));
        form.reset();
      })
      .catch(() => {
        showToast(t("contact.error"), true);
        button.disabled = false;
      });
  };

  form?.addEventListener("submit", handleSubmit);
</script>
